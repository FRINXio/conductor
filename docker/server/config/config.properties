# Servers.
conductor.grpc-server.enabled=false

# Database persistence type.
conductor.db.type=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

# Dynomite Cluster details.
# format is host:port:rack separated by semicolon
conductor.redis.hosts=dyno1:8102:us-east-1c

# Dynomite cluster name
conductor.redis.clusterName=dyno1

# Namespace for the keys stored in Dynomite/Redis
conductor.redis.workflowNamespacePrefix=conductor

# Namespace prefix for the dyno queues
conductor.redis.queueNamespacePrefix=conductor_queues

# No. of threads allocated to dyno-queues (optional)
queues.dynomite.threads=10

# By default with dynomite, we want the repairservice enabled
conductor.app.workflowRepairServiceEnabled=true

# Non-quorum port used to connect to local redis.  Used by dyno-queues.
# When using redis directly, set this to the same port as redis server
# For Dynomite, this is 22122 by default or the local redis-server port used by Dynomite.
conductor.redis.queuesNonQuorumPort=22122

# Elastic search instance indexing is enabled.
conductor.indexing.enabled=true

# Transport address to elasticsearch
conductor.elasticsearch.url=http://es:9200

# Name of the elasticsearch cluster
conductor.elasticsearch.indexName=conductor

# Set elasticsearch version
workflow.elasticsearch.version=6

# Additional modules for metrics collection exposed via logger (optional)
# conductor.metrics-logger.enabled=true
# conductor.metrics-logger.reportPeriodSeconds=15

# Additional modules for metrics collection exposed to Prometheus (optional)
conductor.metrics-prometheus.enabled=true
management.endpoints.web.exposure.include=prometheus

# To enable Workflow/Task Summary Input/Output JSON Serialization, use the following:
# conductor.app.summary-input-output-json-serialization.enabled=true

# Load sample kitchen sink workflow
loadSample=false

# All parameters can be specified as an environment variables in docker compose file by substituting dots for undserscores
# e.g use workflow_elasticsearch_url=VALUE to specify workflow.elasticsearch.url parameter

# NOTE: Configuration files overwrite the environment variables, to use an environment variable for configuration
# you must REMOVE the appropriate parameter from the configuration file first!

# Servers
#conductor.grpc-server.enabled=false
conductor.app.ownerEmailMandatory=false

# Hikari pool sizes are -1 by default and prevent startup
spring.datasource.hikari.maximumPoolSize=40
spring.datasource.hikari.minimumIdle=20
spring.datasource.hikari.idleTimeout=10
# Needed for single node ES cluster
conductor.elasticsearch.clusterHealthColor=yellow

#conductor.indexing.enabled=true

# Set elasticsearch version
conductor.elasticsearch.version=6

# Transport address to elasticsearch
#conductor.elasticsearch.url=http://elasticsearch:9200

# Name of the elasticsearch cluster
conductor.elasticsearch.indexPrefix=conductor

# Additional modules (optional)
# conductor.additional.modules=class_extending_com.google.inject.AbstractModule
# Additional modules for metrics collection (optional)
conductor.additional.modules=com.netflix.conductor.contribs.metrics.MetricsRegistryModule,com.netflix.conductor.contribs.metrics.LoggingMetricsModule
conductor.metrics-logger.enabled=true
conductor.metrics-logger.reportPeriodSeconds=15

# Load sample kitchen sink workflow
#loadSample=false

# Increase payload threshold limits for transferring big schemas to PostgreSQL
conductor.app.workflowInputPayloadSizeThreshold=1
conductor.app.workflowOutputPayloadSizeThreshold=1
conductor.app.maxWorkflowInputPayloadSizeThreshold=1024000
conductor.app.maxWorkflowOutputPayloadSizeThreshold=1024000
conductor.app.taskInputPayloadSizeThreshold=1
conductor.app.taskOutputPayloadSizeThreshold=1
conductor.app.maxTaskInputPayloadSizeThreshold=1024000
conductor.app.maxTaskOutputPayloadSizeThreshold=1024000

# PostgreSQL External Payload Storage variables
conductor.external-payload-storage.type=postgres
conductor.external-payload-storage.postgres.conductor-url=http://localhost:8080
conductor.external-payload-storage.postgres.max-data-rows=1000000
conductor.external-payload-storage.postgres.max-data-days=0
conductor.external-payload-storage.postgres.max-data-months=0
conductor.external-payload-storage.postgres.max-data-years=1

conductor.external-payload-storage.postgres.url=jdbc:postgresql://localhost:5432/postgres
conductor.external-payload-storage.postgres.username=postgres
conductor.external-payload-storage.postgres.password=postgres

conductor.app.taskExecutionPostponeDuration=0